{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/imagem/imagem.component.css","webpack:///./src/app/imagem/imagem.component.html","webpack:///./src/app/imagem/imagem.component.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.ts","webpack:///./src/app/servico-http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button {\\r\\n    position: fixed;\\r\\n    bottom: 40px;\\r\\n    right: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsb2F0LWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDQwcHg7XHJcbiAgICByaWdodDogNDBweDtcclxufSJdfQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<mat-toolbar color=\\\"primary\\\">\\n  <span>Projeto: Laravel + Angular</span>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around none\\\" >\\n  <app-imagem *ngFor= \\\"let p of posts\\\" [post]='p'></app-imagem>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openModal()\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\\n\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { ServicoHttpService } from './servico-http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n  title = 'projetoangular';\n  private posts: Post[];\n\n\n  constructor (public dialog: MatDialog, public servicohttp: ServicoHttpService){}\n\n\n  ngOnInit() {\n    console.log('rodou');\n    this.posts = this.servicohttp.getRegistros;\n  }\n\n  openModal() {\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if(result) {\n          console.log(result);\n         this.servicohttp.setCadastro(result.post, result.arquivo);\n        }else{\n          console.log('hdchdvhdvb');\n        }\n      }\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule, MatDialog } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ImagemComponent } from './imagem/imagem.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { ServicoHttpService } from './servico-http.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImagemComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    ServicoHttpService\n  ],\n  entryComponents : [\n    PostDialogComponent\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card {\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1hZ2VtL2ltYWdlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9pbWFnZW0vaW1hZ2VtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59Il19 */\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>{{post.titulo}}</mat-card-title>\\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <mat-card-content>\\n    <p>\\n     {{post.mensagem}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button>LIKE</button>\\n    <button mat-button>SHARE</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-imagem',\n  templateUrl: './imagem.component.html',\n  styleUrls: ['./imagem.component.css']\n})\nexport class ImagemComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\" >\\n\\n  <!--Cada div é uma linha do formulário-->\\n  <div fxLayoutAlign=\\\"space-between\\\" fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div fxLayoutAlign=\\\"space-between\\\" fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Titulo da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Subtitulo da mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Deixe aqui sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n  </mat-form-field>\\n\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display:none;\\\" (change)=\\\"mudouarquivo($event)\\\" #filebutton>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"filebutton.click()\\\">Download \\n  <mat-icon>add_a_photo</mat-icon>\\n</button>\\n\\n<p *ngIf=\\\"nomearquivo!=''\\\"><strong>Arquivo: </strong> {{nomearquivo}}\\n  <mat-icon color=primary>done</mat-icon>\\n</p>\\n\\n<br><br>\\n\\n<div style=\\\"text-align: center;\\\">\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">OK</button>\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\" >Cancelar</button>\\n</div> \\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Post } from '../post';\n\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  private nomearquivo: string = '';\n\n  private dados = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\"),\n    arquivo: null\n  }\n\n  constructor(public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  mudouarquivo(event) {\n    \n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar() {\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogref.close(null);\n  }\n}\n","export class Post {\r\n\r\n    constructor(\r\n        public  nome: string,\r\n        public  titulo: string,\r\n        public  subtitulo: string,\r\n        public  email: string,\r\n        public  mensagem: string,\r\n        public  arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ){\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoHttpService {\n\n  public getRegistros: Post[] = [];\n\n  constructor(private http: HttpClient) {\n    console.log('cjbzhxvxzhv');\n    this.http.get(\"/api/\").subscribe(\n      (registros: any[]) => {\n\n          for(let p of registros) {\n          \n            var reg = new Post(p.nome,\n              p.titulo,\n              p.subtitulo,p.email,p.mensagem,p.arquivo,p.id,p.ikes);\n            this.getRegistros.push(reg);\n\n          }\n      });\n\n  }\n\n  setCadastro(registro: Post, arquivo: File) {\n    const uploadData = new FormData();\n    uploadData.append('nome', registro.nome);\n    uploadData.append('email', registro.email);\n    uploadData.append('titulo', registro.titulo);\n    uploadData.append('subtitulo', registro.subtitulo);\n    uploadData.append('mensagem', registro.mensagem);\n    uploadData.append('arquivo', arquivo, arquivo.name);\n    \n    this.http.post('/api/', uploadData, {reportProgress: true, observe: 'events'}).subscribe((event: any) => {\n      if(event.type == HttpEventType.Response){\n        console.log('retorno');\n        console.log(event);\n      }\n    });\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}